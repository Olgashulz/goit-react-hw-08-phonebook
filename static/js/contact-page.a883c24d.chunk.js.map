{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/shortid/lib/alphabet.js","../node_modules/shortid/index.js","../node_modules/shortid/lib/index.js","../node_modules/shortid/lib/random/random-from-seed.js","../node_modules/shortid/lib/build.js","../node_modules/shortid/lib/generate.js","../node_modules/shortid/lib/random/random-byte-browser.js","../node_modules/shortid/node_modules/nanoid/format.browser.js","../node_modules/shortid/lib/is-valid.js","../node_modules/shortid/lib/util/cluster-worker-id-browser.js","components/Form/Form.module.css","components/Contacts/Contacts.module.css","components/Filter/Filter.module.css","App.module.css","redux/selectors.js","components/Form/Form.js","components/Contacts/Contacts.js","components/Filter/Filter.js","views/ContactsView.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","alphabet","previousSeed","shuffled","randomFromSeed","require","ORIGINAL","reset","setCharacters","_alphabet_","Error","unique","split","filter","item","ind","lastIndexOf","join","getShuffled","characterIndex","sourceArray","targetArray","r","nextValue","Math","floor","splice","shuffle","module","exports","get","characters","seed","lookup","index","build","isValid","clusterWorkerId","generate","seedValue","worker","workerId","newCharacters","_seed_","counter","previousSeconds","str","seconds","Date","now","random","format","number","loopCounter","pow","randomByte","crypto","window","msCrypto","getRandomValues","size","Uint8Array","bytes","mask","log","LN2","step","id","RegExp","replace","test","visibleContacts","contacts","items","contact","name","toLowerCase","trim","includes","Form","props","useState","setName","setNumber","disabled","setDisabled","useSelector","state","dispatch","useDispatch","handleInputChange","event","currentTarget","resetForm","onSubmit","preventDefault","newContact","shortid","operations","addContact","className","styles","form","labelForm","type","onChange","onBlur","find","toast","error","inputForm","pattern","title","required","formBtn","Contacts","selectors","useEffect","fetchContacts","contactsList","map","contactItem","contactTel","onClick","deleteContact","button","btn_redact","Filter","findLabel","filterContact","target","resetFilter","ContactsView","container","phonebook","titleContacts"],"mappings":"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","file":"static/js/contact-page.a883c24d.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","'use strict';\n\nvar randomFromSeed = require('./random/random-from-seed');\n\nvar ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';\nvar alphabet;\nvar previousSeed;\n\nvar shuffled;\n\nfunction reset() {\n    shuffled = false;\n}\n\nfunction setCharacters(_alphabet_) {\n    if (!_alphabet_) {\n        if (alphabet !== ORIGINAL) {\n            alphabet = ORIGINAL;\n            reset();\n        }\n        return;\n    }\n\n    if (_alphabet_ === alphabet) {\n        return;\n    }\n\n    if (_alphabet_.length !== ORIGINAL.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);\n    }\n\n    var unique = _alphabet_.split('').filter(function(item, ind, arr){\n       return ind !== arr.lastIndexOf(item);\n    });\n\n    if (unique.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));\n    }\n\n    alphabet = _alphabet_;\n    reset();\n}\n\nfunction characters(_alphabet_) {\n    setCharacters(_alphabet_);\n    return alphabet;\n}\n\nfunction setSeed(seed) {\n    randomFromSeed.seed(seed);\n    if (previousSeed !== seed) {\n        reset();\n        previousSeed = seed;\n    }\n}\n\nfunction shuffle() {\n    if (!alphabet) {\n        setCharacters(ORIGINAL);\n    }\n\n    var sourceArray = alphabet.split('');\n    var targetArray = [];\n    var r = randomFromSeed.nextValue();\n    var characterIndex;\n\n    while (sourceArray.length > 0) {\n        r = randomFromSeed.nextValue();\n        characterIndex = Math.floor(r * sourceArray.length);\n        targetArray.push(sourceArray.splice(characterIndex, 1)[0]);\n    }\n    return targetArray.join('');\n}\n\nfunction getShuffled() {\n    if (shuffled) {\n        return shuffled;\n    }\n    shuffled = shuffle();\n    return shuffled;\n}\n\n/**\n * lookup shuffled letter\n * @param index\n * @returns {string}\n */\nfunction lookup(index) {\n    var alphabetShuffled = getShuffled();\n    return alphabetShuffled[index];\n}\n\nfunction get () {\n  return alphabet || ORIGINAL;\n}\n\nmodule.exports = {\n    get: get,\n    characters: characters,\n    seed: setSeed,\n    lookup: lookup,\n    shuffled: getShuffled\n};\n","'use strict';\nmodule.exports = require('./lib/index');\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar build = require('./build');\nvar isValid = require('./is-valid');\n\n// if you are using cluster or multiple servers use this to make each instance\n// has a unique value for worker\n// Note: I don't know if this is automatically set when using third\n// party cluster solutions such as pm2.\nvar clusterWorkerId = require('./util/cluster-worker-id') || 0;\n\n/**\n * Set the seed.\n * Highly recommended if you don't want people to try to figure out your id schema.\n * exposed as shortid.seed(int)\n * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.\n */\nfunction seed(seedValue) {\n    alphabet.seed(seedValue);\n    return module.exports;\n}\n\n/**\n * Set the cluster worker or machine id\n * exposed as shortid.worker(int)\n * @param workerId worker must be positive integer.  Number less than 16 is recommended.\n * returns shortid module so it can be chained.\n */\nfunction worker(workerId) {\n    clusterWorkerId = workerId;\n    return module.exports;\n}\n\n/**\n *\n * sets new characters to use in the alphabet\n * returns the shuffled alphabet\n */\nfunction characters(newCharacters) {\n    if (newCharacters !== undefined) {\n        alphabet.characters(newCharacters);\n    }\n\n    return alphabet.shuffled();\n}\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction generate() {\n  return build(clusterWorkerId);\n}\n\n// Export all other functions as properties of the generate function\nmodule.exports = generate;\nmodule.exports.generate = generate;\nmodule.exports.seed = seed;\nmodule.exports.worker = worker;\nmodule.exports.characters = characters;\nmodule.exports.isValid = isValid;\n","'use strict';\n\n// Found this seed-based random generator somewhere\n// Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)\n\nvar seed = 1;\n\n/**\n * return a random number based on a seed\n * @param seed\n * @returns {number}\n */\nfunction getNextValue() {\n    seed = (seed * 9301 + 49297) % 233280;\n    return seed/(233280.0);\n}\n\nfunction setSeed(_seed_) {\n    seed = _seed_;\n}\n\nmodule.exports = {\n    nextValue: getNextValue,\n    seed: setSeed\n};\n","'use strict';\n\nvar generate = require('./generate');\nvar alphabet = require('./alphabet');\n\n// Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.\n// This number should be updated every year or so to keep the generated id short.\n// To regenerate `new Date() - 0` and bump the version. Always bump the version!\nvar REDUCE_TIME = 1567752802062;\n\n// don't change unless we change the algos or REDUCE_TIME\n// must be an integer and less than 16\nvar version = 7;\n\n// Counter is used when shortid is called multiple times in one second.\nvar counter;\n\n// Remember the last time shortid was called in case counter is needed.\nvar previousSeconds;\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction build(clusterWorkerId) {\n    var str = '';\n\n    var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);\n\n    if (seconds === previousSeconds) {\n        counter++;\n    } else {\n        counter = 0;\n        previousSeconds = seconds;\n    }\n\n    str = str + generate(version);\n    str = str + generate(clusterWorkerId);\n    if (counter > 0) {\n        str = str + generate(counter);\n    }\n    str = str + generate(seconds);\n    return str;\n}\n\nmodule.exports = build;\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar random = require('./random/random-byte');\nvar format = require('nanoid/format');\n\nfunction generate(number) {\n    var loopCounter = 0;\n    var done;\n\n    var str = '';\n\n    while (!done) {\n        str = str + format(random, alphabet.get(), 1);\n        done = number < (Math.pow(16, loopCounter + 1 ) );\n        loopCounter++;\n    }\n    return str;\n}\n\nmodule.exports = generate;\n","'use strict';\n\nvar crypto = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto\n\nvar randomByte;\n\nif (!crypto || !crypto.getRandomValues) {\n    randomByte = function(size) {\n        var bytes = [];\n        for (var i = 0; i < size; i++) {\n            bytes.push(Math.floor(Math.random() * 256));\n        }\n        return bytes;\n    };\n} else {\n    randomByte = function(size) {\n        return crypto.getRandomValues(new Uint8Array(size));\n    };\n}\n\nmodule.exports = randomByte;\n","// This file replaces `format.js` in bundlers like webpack or Rollup,\n// according to `browser` config in `package.json`.\n\nmodule.exports = function (random, alphabet, size) {\n  // We can’t use bytes bigger than the alphabet. To make bytes values closer\n  // to the alphabet, we apply bitmask on them. We look for the closest\n  // `2 ** x - 1` number, which will be bigger than alphabet size. If we have\n  // 30 symbols in the alphabet, we will take 31 (00011111).\n  // We do not use faster Math.clz32, because it is not available in browsers.\n  var mask = (2 << Math.log(alphabet.length - 1) / Math.LN2) - 1\n  // Bitmask is not a perfect solution (in our example it will pass 31 bytes,\n  // which is bigger than the alphabet). As a result, we will need more bytes,\n  // than ID size, because we will refuse bytes bigger than the alphabet.\n\n  // Every hardware random generator call is costly,\n  // because we need to wait for entropy collection. This is why often it will\n  // be faster to ask for few extra bytes in advance, to avoid additional calls.\n\n  // Here we calculate how many random bytes should we call in advance.\n  // It depends on ID length, mask / alphabet size and magic number 1.6\n  // (which was selected according benchmarks).\n\n  // -~f => Math.ceil(f) if n is float number\n  // -~i => i + 1 if n is integer number\n  var step = -~(1.6 * mask * size / alphabet.length)\n  var id = ''\n\n  while (true) {\n    var bytes = random(step)\n    // Compact alternative for `for (var i = 0; i < step; i++)`\n    var i = step\n    while (i--) {\n      // If random byte is bigger than alphabet even after bitmask,\n      // we refuse it by `|| ''`.\n      id += alphabet[bytes[i] & mask] || ''\n      // More compact than `id.length + 1 === size`\n      if (id.length === +size) return id\n    }\n  }\n}\n","'use strict';\nvar alphabet = require('./alphabet');\n\nfunction isShortId(id) {\n    if (!id || typeof id !== 'string' || id.length < 6 ) {\n        return false;\n    }\n\n    var nonAlphabetic = new RegExp('[^' +\n      alphabet.get().replace(/[|\\\\{}()[\\]^$+*?.-]/g, '\\\\$&') +\n    ']');\n    return !nonAlphabetic.test(id);\n}\n\nmodule.exports = isShortId;\n","'use strict';\n\nmodule.exports = 0;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__3nrGf\",\"labelForm\":\"Form_labelForm__BfEcL\",\"inputForm\":\"Form_inputForm__1Z-Af\",\"formBtn\":\"Form_formBtn__KUW6z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsList\":\"Contacts_contactsList__2PVXH\",\"contactItem\":\"Contacts_contactItem__3CuHe\",\"contactTel\":\"Contacts_contactTel__3YwC3\",\"button\":\"Contacts_button__25YSl\",\"btn_redact\":\"Contacts_btn_redact__3J9mU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"findLabel\":\"Filter_findLabel__31kgd\",\"inputForm\":\"Filter_inputForm__2pQZB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3-rOr\",\"title\":\"App_title__2QvHB\",\"titleContacts\":\"App_titleContacts__1aG_V\",\"phonebook\":\"App_phonebook__1C4op\"};","export const visibleContacts = ({ contacts }) => {\r\n    return contacts.items.filter(contact =>\r\n        contact.name.toLowerCase().trim().includes(contacts.filter.toLowerCase().trim())\r\n    );\r\n};\r\n\r\n\r\n\r\n","import { useState } from \"react\";\r\nimport { operations } from '../../redux';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport shortid from 'shortid';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nimport styles from './Form.module.css';\r\n\r\nexport default function Form(props) {\r\n    const [name, setName] = useState('');\r\n    const [number, setNumber] = useState('');\r\n    const [disabled, setDisabled] = useState(false);\r\n\r\n    const contacts = useSelector(state => state.contacts.items);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleInputChange = event => {\r\n        const { name, value } = event.currentTarget;\r\n        setDisabled(false);\r\n\r\n        switch (name) {\r\n            case 'name':\r\n                setName(value);\r\n                break;\r\n\r\n            case 'number':\r\n                setNumber(value);\r\n                break;\r\n\r\n            default:\r\n                return;\r\n        }\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const newContact = {\r\n            id: shortid.generate(),\r\n            name: name,\r\n            number: number\r\n        }\r\n\r\n        dispatch(operations.addContact(newContact));\r\n        resetForm();\r\n    }\r\n\r\n    const resetForm = () => {\r\n        setName('');\r\n        setNumber('');\r\n    }\r\n\r\n\r\n    const findNameInContact = (event) => {\r\n        if (contacts.find((contact) =>\r\n            contact.name.toLowerCase() === event.currentTarget.value.toLowerCase()\r\n        )) {\r\n            setDisabled(true)\r\n            toast.error(`${event.currentTarget.value} is already in contacts.`)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form\r\n            onSubmit={handleSubmit}\r\n            className={styles.form} >\r\n            <label className={styles.labelForm}>\r\n                Name\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    value={name}\r\n                    onChange={handleInputChange}\r\n                    onBlur={findNameInContact}\r\n                    className={styles.inputForm}\r\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                    title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                    required\r\n                />\r\n            </label>\r\n            <label className={styles.labelForm}>\r\n                Number\r\n                <input\r\n                    type=\"tel\"\r\n                    name=\"number\"\r\n                    value={number}\r\n                    onChange={handleInputChange}\r\n                    disabled={disabled}\r\n                    className={styles.inputForm}\r\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                    title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                    required\r\n                />\r\n\r\n            </label>\r\n            <button\r\n                type=\"submit\"\r\n                disabled={disabled}\r\n                className={styles.formBtn}\r\n            >Add contact</button>\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { operations, selectors } from '../../redux';\r\n\r\nimport styles from './Contacts.module.css';\r\n\r\n\r\n\r\nfunction Contacts() {\r\n    const contacts = useSelector(selectors.visibleContacts);\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(operations.fetchContacts())\r\n    }, [dispatch]);\r\n\r\n    return (\r\n        <ul className={styles.contactsList}>\r\n            {contacts.map(({ name, number, id }) => (\r\n                <li key={id}\r\n                    className={styles.contactItem}>\r\n                    {name}:\r\n                    <span className={styles.contactTel}>{number}</span>\r\n                    <button onClick={() => dispatch(operations.deleteContact(id))} className={styles.button}>Delete</button>\r\n                    <button className={styles.btn_redact}></button>\r\n\r\n                </li>\r\n            ))}\r\n        </ul>\r\n    );\r\n}\r\n\r\nexport default Contacts;\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport styles from './Filter.module.css';\r\nimport { filterContact, resetFilter } from \"../../redux/actions\";\r\n\r\nconst Filter = () => {\r\n    const filter = useSelector(state => state.filter)\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <label className={styles.findLabel}>\r\n            Find contact by name\r\n            <input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                value={filter}\r\n                onChange={event => dispatch(filterContact(event.target.value))}\r\n                className={styles.inputForm}\r\n                onBlur={() => dispatch(resetFilter())}\r\n            />\r\n        </label>\r\n    )\r\n}\r\n\r\nexport default Filter;\r\n\r\n","import Form from '../components/Form';\r\nimport Contacts from '../components/Contacts';\r\nimport Filter from \"../components/Filter\";\r\nimport styles from '../App.module.css';\r\n\r\nexport default function ContactsView() {\r\n\r\n    return (\r\n        <>\r\n            <div className={styles.container}>\r\n                <div className={styles.phonebook}>\r\n                    <h1 className={styles.title}>Phonebook</h1>\r\n                    <Form />\r\n                    <h2 className={styles.titleContacts}>Contacts</h2>\r\n                    <Filter />\r\n                    <Contacts />\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}"],"sourceRoot":""}