{"version":3,"sources":["components/Filter/Filter.module.css","redux/actions.js","redux/selectors.js","components/Form/Form.js","components/Contacts/Contacts.js","components/Filter/Filter.js","App.js","redux/reducers.js","redux/store.js","index.js","components/Form/Form.module.css","components/Contacts/Contacts.module.css","App.module.css"],"names":["module","exports","addContact","createAction","deleteContact","filterContact","resetFilter","visibleContacts","items","filter","contact","name","toLowerCase","trim","includes","Form","props","useState","setName","number","setNumber","disabled","setDisabled","contacts","useSelector","dispatch","useDispatch","handleInputChange","event","currentTarget","value","resetForm","onSubmit","preventDefault","addNewContact","id","shortid","generate","className","styles","form","labelForm","type","onChange","onBlur","find","alert","inputForm","pattern","title","required","formBtn","Contacts","contactsList","map","contactItem","contactTel","onClick","button","Filter","state","findLabel","target","App","container","phonebook","titleContacts","createReducer","action","payload","rootReducer","combineReducers","persistConfig","key","storage","persistedReducer","persistReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","obj","persistor","persistStore","ReactDOM","render","StrictMode","data","loading","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,UAAY,0BAA0B,UAAY,4B,wICCvDC,EAAaC,YAAa,uBAC1BC,EAAgBD,YAAa,0BAC7BE,EAAgBF,YAAa,0BAC7BG,EAAcH,YAAa,sB,OCL3BI,EAAkB,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,OACrC,OAAOD,EAAMC,QAAO,SAAAC,GAAO,OACvBA,EAAQC,KAAKC,cAAcC,OAAOC,SAASL,EAAOG,cAAcC,Y,wBCSzD,SAASE,EAAKC,GACzB,MAAwBC,mBAAS,IAAjC,mBAAON,EAAP,KAAaO,EAAb,KACA,EAA4BD,mBAAS,IAArC,mBAAOE,EAAP,KAAeC,EAAf,KACA,EAAgCH,oBAAS,GAAzC,mBAAOI,EAAP,KAAiBC,EAAjB,KAEMC,EAAWC,YAAYjB,GACvBkB,EAAWC,cAEXC,EAAoB,SAAAC,GAEtB,MAAwBA,EAAMC,cAAtBlB,EAAR,EAAQA,KAAMmB,EAAd,EAAcA,MAGd,OAFAR,GAAY,GAEJX,GACJ,IAAK,OACDO,EAAQY,GACR,MAEJ,IAAK,SACDV,EAAUU,GACV,MAEJ,QACI,SAiBNC,EAAY,WACdb,EAAQ,IACRE,EAAU,KAYd,OACI,uBACIY,SA7Ba,SAACJ,GAClBA,EAAMK,iBAEN,IAAMC,EAAgB,CAClBC,GAAIC,IAAQC,WACZ1B,KAAMA,EACNQ,OAAQA,GAGZM,EAASvB,EAAWgC,IACpBH,KAoBIO,UAAWC,IAAOC,KAFtB,UAGI,wBAAOF,UAAWC,IAAOE,UAAzB,iBAEI,uBACIC,KAAK,OACL/B,KAAK,OACLmB,MAAOnB,EACPgC,SAAUhB,EACViB,OApBU,SAAChB,GACnBL,EAASsB,MAAK,SAACnC,GAAD,OACdA,EAAQC,KAAKC,gBAAkBgB,EAAMC,cAAcC,MAAMlB,mBAEzDU,GAAY,GACZwB,MAAM,GAAD,OAAIlB,EAAMC,cAAcC,MAAxB,+BAgBGQ,UAAWC,IAAOQ,UAClBC,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,OAGhB,wBAAOZ,UAAWC,IAAOE,UAAzB,mBAEI,uBACIC,KAAK,MACL/B,KAAK,SACLmB,MAAOX,EACPwB,SAAUhB,EACVN,SAAUA,EACViB,UAAWC,IAAOQ,UAClBC,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,OAIhB,wBACIR,KAAK,SACLrB,SAAUA,EACViB,UAAWC,IAAOY,QAHtB,4B,oBCxEGC,MAnBf,WACI,IAAM7B,EAAWC,YAAYjB,GAEvBkB,EAAWC,cAEjB,OACI,oBAAIY,UAAWC,IAAOc,aAAtB,SACK9B,EAAS+B,KAAI,gBAAG3C,EAAH,EAAGA,KAAMQ,EAAT,EAASA,OAAQgB,EAAjB,EAAiBA,GAAjB,OACV,qBACIG,UAAWC,IAAOgB,YADtB,UAEK5C,EAFL,IAGI,sBAAM2B,UAAWC,IAAOiB,WAAxB,SAAqCrC,IACrC,wBAAQsC,QAAS,kBAAMhC,EAASrB,EAAc+B,KAAMG,UAAWC,IAAOmB,OAAtE,sBAJKvB,S,iBCSVwB,EAnBA,WACX,IAAMlD,EAASe,aAAY,SAAAoC,GAAK,OAAIA,EAAMnD,UACpCgB,EAAWC,cAEjB,OACI,wBAAOY,UAAWC,IAAOsB,UAAzB,iCAEI,uBACInB,KAAK,OACL/B,KAAK,OACLmB,MAAOrB,EACPkC,SAAU,SAAAf,GAAK,OAAIH,EAASpB,EAAcuB,EAAMkC,OAAOhC,SACvDQ,UAAWC,IAAOQ,UAClBH,OAAQ,kBAAMnB,EAASnB,Y,gBCbxB,SAASyD,IAEtB,OACE,mCACE,qBAAKzB,UAAWC,IAAOyB,UAAvB,SACE,sBAAK1B,UAAWC,IAAO0B,UAAvB,UACE,oBAAI3B,UAAWC,IAAOU,MAAtB,uBACA,cAAClC,EAAD,IAEA,oBAAIuB,UAAWC,IAAO2B,cAAtB,sBACA,cAAC,EAAD,IACA,cAAC,EAAD,W,+BCbJ1D,EAAQ2D,YAAc,IAAD,mBACtBjE,GAAa,SAAC0D,EAAOQ,GAAR,4BAAuBR,GAAvB,CAA8BQ,EAAOC,aAD5B,cAEtBjE,GAAgB,SAACwD,EAAOQ,GAAR,OAAmBR,EAAMnD,QAAO,SAACC,GAAD,OAAaA,EAAQyB,KAAOiC,EAAOC,cAF7D,IAMrB5D,EAAS0D,YAAc,IAAD,mBACvB9D,GAAgB,SAACuD,EAAOQ,GAAR,OAAmBA,EAAOC,WADnB,cAEvB/D,GAAc,SAACsD,EAAOQ,GAAR,MAA2B,MAFlB,IAWbE,EALKC,YAAgB,CAChC/D,QACAC,W,eCHE+D,EAAgB,CAClBC,IAAK,WACLC,Q,OAAAA,GAGEC,EAAmBC,YAAeJ,EAAeF,GAEjDO,EAAQC,YAAe,CACzBC,QAASJ,EACTK,WAAYC,YAAqB,CAC7BC,kBAAmB,CACfC,eAAgB,CAACC,IAAOC,IAAWC,IAAOC,IAASC,IAAOC,UAQvDC,EADH,CAAEb,QAAOc,UAFHC,YAAaf,I,QCtB/BgB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUlB,MAAOmB,EAAKnB,MAAtB,SACE,cAAC,IAAD,CAAaoB,QAAS,KAAMN,UAAWK,EAAKL,UAA5C,SACE,cAAC5B,EAAD,UAINmC,SAASC,eAAe,U,kBCf1BnG,EAAOC,QAAU,CAAC,KAAO,mBAAmB,UAAY,wBAAwB,UAAY,wBAAwB,QAAU,wB,kBCA9HD,EAAOC,QAAU,CAAC,aAAe,+BAA+B,YAAc,8BAA8B,WAAa,6BAA6B,OAAS,2B,kBCA/JD,EAAOC,QAAU,CAAC,UAAY,uBAAuB,MAAQ,mBAAmB,cAAgB,2BAA2B,UAAY,0B","file":"static/js/main.41d7dd26.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"findLabel\":\"Filter_findLabel__3Uq7D\",\"inputForm\":\"Filter_inputForm__3co45\"};","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const addContact = createAction('contacts/addContact');\r\nexport const deleteContact = createAction('contacts/deleteContact');\r\nexport const filterContact = createAction('contacts/filterContact');\r\nexport const resetFilter = createAction('filter/resetFilter')\r\n\r\n\r\n/////////////////////////////////////////////////////////////////////////////////////\r\n// import { ADD_CONTACT, DELETE_CONTACT, FILTER_CONTACT } from './types';\r\n\r\n// export const addContact = (data) => ({\r\n//     type: ADD_CONTACT,\r\n//     payload: FormData\r\n// })\r\n\r\n// export const deleteContact = (id) => ({\r\n//     type: DELETE_CONTACT,\r\n//     payload: id\r\n// })\r\n\r\n// export const filterContact = (value) => ({\r\n//     type: FILTER_CONTACT,\r\n//     payload: value\r\n// })\r\n\r\n\r\n\r\n","export const visibleContacts = ({ items, filter }) => {\r\n    return items.filter(contact =>\r\n        contact.name.toLowerCase().trim().includes(filter.toLowerCase().trim())\r\n    );\r\n};\r\n\r\n\r\n\r\n","import { useState } from \"react\";\r\nimport styles from './Form.module.css';\r\nimport { addContact } from \"../../redux/actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { visibleContacts } from '../../redux/selectors'\r\n\r\nimport shortid from 'shortid';\r\n\r\n\r\n\r\n\r\nexport default function Form(props) {\r\n    const [name, setName] = useState('');\r\n    const [number, setNumber] = useState('');\r\n    const [disabled, setDisabled] = useState(false);\r\n\r\n    const contacts = useSelector(visibleContacts)\r\n    const dispatch = useDispatch();\r\n\r\n    const handleInputChange = event => {\r\n        // console.log(event.currentTarget.value);\r\n        const { name, value } = event.currentTarget;\r\n        setDisabled(false);\r\n\r\n        switch (name) {\r\n            case 'name':\r\n                setName(value);\r\n                break;\r\n\r\n            case 'number':\r\n                setNumber(value);\r\n                break;\r\n\r\n            default:\r\n                return;\r\n        }\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        const addNewContact = {\r\n            id: shortid.generate(),\r\n            name: name,\r\n            number: number\r\n        }\r\n\r\n        dispatch(addContact(addNewContact));\r\n        resetForm();\r\n    }\r\n\r\n    const resetForm = () => {\r\n        setName('');\r\n        setNumber('');\r\n    }\r\n\r\n    const findNameInContact = (event) => {\r\n        if (contacts.find((contact) =>\r\n            contact.name.toLowerCase() === event.currentTarget.value.toLowerCase()\r\n        )) {\r\n            setDisabled(true)\r\n            alert(`${event.currentTarget.value} is already in contacts.`)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form\r\n            onSubmit={handleSubmit}\r\n            className={styles.form} >\r\n            <label className={styles.labelForm}>\r\n                Name\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    value={name}\r\n                    onChange={handleInputChange}\r\n                    onBlur={findNameInContact}\r\n                    className={styles.inputForm}\r\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                    title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                    required\r\n                />\r\n            </label>\r\n            <label className={styles.labelForm}>\r\n                Number\r\n                <input\r\n                    type=\"tel\"\r\n                    name=\"number\"\r\n                    value={number}\r\n                    onChange={handleInputChange}\r\n                    disabled={disabled}\r\n                    className={styles.inputForm}\r\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                    title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                    required\r\n                />\r\n\r\n            </label>\r\n            <button\r\n                type=\"submit\"\r\n                disabled={disabled}\r\n                className={styles.formBtn}\r\n            >Add contact</button>\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport styles from './Contacts.module.css';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { deleteContact } from '../../redux/actions';\r\nimport { visibleContacts } from '../../redux/selectors'\r\n\r\n\r\nfunction Contacts() {\r\n    const contacts = useSelector(visibleContacts);\r\n    // const filter = useSelector(state => state.filter);\r\n    const dispatch = useDispatch()\r\n\r\n    return (\r\n        <ul className={styles.contactsList}>\r\n            {contacts.map(({ name, number, id }) => (\r\n                <li key={id}\r\n                    className={styles.contactItem}>\r\n                    {name}:\r\n                    <span className={styles.contactTel}>{number}</span>\r\n                    <button onClick={() => dispatch(deleteContact(id))} className={styles.button}>Delete</button>\r\n                </li>\r\n            ))}\r\n        </ul>\r\n    );\r\n}\r\n\r\nexport default Contacts;\r\n//////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n// import React from 'react';\r\n// import styles from './Contacts.module.css';\r\n// import { useSelector, useDispatch } from 'react-redux'\r\n// import { deleteContact } from '../../redux/actions';\r\n// import { visibleContacts } from '../../redux/selectors'\r\n\r\n\r\n// function Contacts() {\r\n//     // const contacts = useSelector(visibleContacts);\r\n\r\n//     const contacts = useSelector(state => state.contacts)\r\n//     const value = useSelector(state => state.filter)\r\n//     const dispatch = useDispatch();\r\n\r\n//     const visibleContacts = (contacts, filter) => {\r\n//         return contacts.filter(contact =>\r\n//             contact.name.toLowerCase().includes(filter.toLowerCase())\r\n//         );\r\n//     };\r\n\r\n//     return (\r\n//         <ul className={styles.contactsList}>\r\n//             {visibleContacts(contacts, value).map(({ name, number, id }) => (\r\n//                 <li key={id}\r\n//                     className={styles.contactItem}>\r\n//                     {name}:\r\n//                     <span className={styles.contactTel}>{number}</span>\r\n//                     <button onClick={() => dispatch(deleteContact(id))} className={styles.button}>Delete</button>\r\n//                 </li>\r\n//             ))}\r\n//         </ul>\r\n//     );\r\n// }\r\n\r\n// export default Contacts;\r\n","import React from \"react\";\r\nimport styles from './Filter.module.css';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { filterContact, resetFilter } from \"../../redux/actions\";\r\n\r\nconst Filter = () => {\r\n    const filter = useSelector(state => state.filter)\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <label className={styles.findLabel}>\r\n            Find contact by name\r\n            <input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                value={filter}\r\n                onChange={event => dispatch(filterContact(event.target.value))}\r\n                className={styles.inputForm}\r\n                onBlur={() => dispatch(resetFilter())}\r\n            />\r\n        </label>\r\n    )\r\n}\r\n\r\nexport default Filter;\r\n\r\n//////////////////////////////////////////////////////////////////////////////////////////////////\r\n// import React from \"react\";\r\n// import styles from './Filter.module.css';\r\n// import { useSelector, useDispatch } from \"react-redux\";\r\n// import { filterContact, resetFilter } from \"../../redux/actions\";\r\n\r\n// const Filter = () => {\r\n//     const value = useSelector(state => state.filter)\r\n//     // const contacts = useSelector(state => state.contacts)\r\n//     const dispatch = useDispatch();\r\n\r\n//     const resetFiler = () => {\r\n//         console.log(value)\r\n//     }\r\n\r\n//     return (\r\n//         <label className={styles.findLabel}>\r\n//             Find contact by name\r\n//             <input\r\n//                 type=\"text\"\r\n//                 name=\"name\"\r\n//                 value={value}\r\n//                 onChange={event => dispatch(filterContact(event.target.value))}\r\n//                 className={styles.inputForm}\r\n//                 onBlur={resetFiler()}\r\n//             />\r\n//         </label>\r\n//     )\r\n// }\r\n\r\n// export default Filter;\r\n\r\n\r\n\r\n","import Form from './components/Form';\r\nimport Contacts from './components/Contacts';\r\nimport Filter from \"./components/Filter\";\r\nimport styles from './App.module.css';\r\n\r\nexport default function App() {\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.container}>\r\n        <div className={styles.phonebook}>\r\n          <h1 className={styles.title}>Phonebook</h1>\r\n          <Form />\r\n\r\n          <h2 className={styles.titleContacts}>Contacts</h2>\r\n          <Filter />\r\n          <Contacts />\r\n\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import { combineReducers, createReducer } from \"@reduxjs/toolkit\";\r\nimport { addContact, deleteContact, filterContact, resetFilter } from \"./actions\";\r\n\r\nconst items = createReducer([], {\r\n    [addContact]: (state, action) => [...state, action.payload],\r\n    [deleteContact]: (state, action) => state.filter((contact) => contact.id !== action.payload),\r\n\r\n});\r\n\r\nconst filter = createReducer('', {\r\n    [filterContact]: (state, action) => action.payload,\r\n    [resetFilter]: (state, action) => state = '',\r\n\r\n});\r\n\r\nconst rootReducer = combineReducers({\r\n    items,\r\n    filter\r\n})\r\n\r\nexport default rootReducer;\r\n\r\n///////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n// import { ADD_CONTACT, DELETE_CONTACT, FILTER_CONTACT } from \"./types\";\r\n// import { combineReducers } from 'redux';\r\n\r\n\r\n// const arrContacts = [\r\n//     { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n//     { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n//     { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n//     { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n// ];\r\n\r\n// const contactReducer = (state = arrContacts, action) => {\r\n//     switch (action.type) {\r\n//         case ADD_CONTACT:\r\n//             return [...state, action.payload];\r\n//         case DELETE_CONTACT:\r\n//             return state.filter(contact => contact.id !== action.payload);\r\n//         default:\r\n//             return state;\r\n//     }\r\n// }\r\n\r\n// const filterReducer = (state = arrContacts, action) => {\r\n//     switch (action.type) {\r\n//         case FILTER_CONTACT:\r\n//             return action.payload;\r\n//         default:\r\n//             return state;\r\n//     }\r\n// }\r\n\r\n// export const rootReducer = combineReducers({\r\n//     contacts: contactReducer,\r\n//     filter: filterReducer,\r\n// });\r\n\r\n\r\n\r\n\r\n\r\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport rootReducer from \"./reducers\";\r\nimport {\r\n    persistStore,\r\n    persistReducer,\r\n    FLUSH,\r\n    REHYDRATE,\r\n    PAUSE,\r\n    PERSIST,\r\n    PURGE,\r\n    REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nconst persistConfig = {\r\n    key: 'contacts',\r\n    storage,\r\n}\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\r\n\r\nconst store = configureStore({\r\n    reducer: persistedReducer,\r\n    middleware: getDefaultMiddleware({\r\n        serializableCheck: {\r\n            ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\r\n        },\r\n    }),\r\n});\r\n\r\nconst persistor = persistStore(store)\r\n\r\nconst obj = { store, persistor }\r\nexport default obj;\r\n\r\n//////////////////////////////////////////////////////////////////////////////////////////\r\n// import { createStore } from 'redux';\r\n// import { rootReducer } from './reducers';\r\n\r\n// console.log(rootReducer)\r\n\r\n// const store = createStore(rootReducer);\r\n\r\n// export default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux'\r\nimport data from './redux/store.js'\r\nimport { PersistGate } from 'redux-persist/integration/react'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={data.store}>\r\n      <PersistGate loading={null} persistor={data.persistor}>\r\n        <App />\r\n      </PersistGate>\r\n    </Provider >\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__3otnj\",\"labelForm\":\"Form_labelForm__3Mkj7\",\"inputForm\":\"Form_inputForm__16EBk\",\"formBtn\":\"Form_formBtn__332QG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsList\":\"Contacts_contactsList__3ibX-\",\"contactItem\":\"Contacts_contactItem__12TRH\",\"contactTel\":\"Contacts_contactTel__3XlzW\",\"button\":\"Contacts_button__111BV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__34dW0\",\"title\":\"App_title__3E3up\",\"titleContacts\":\"App_titleContacts__QfitT\",\"phonebook\":\"App_phonebook__1WHnj\"};"],"sourceRoot":""}