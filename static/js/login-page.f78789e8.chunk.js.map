{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","views/RegisterView.module.css","views/LoginView.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","module","exports","LoginView","dispatch","useDispatch","useState","email","setEmail","password","setPassword","handleChange","target","name","className","styles","title","subtitle","onSubmit","e","preventDefault","toast","error","authOperations","form","autoComplete","to","exact","closeBtn","activeStyle","activeLink","labelForm","type","onChange","inputForm","formBtn"],"mappings":"8LAIe,SAASA,EAAeC,EAAKC,GAC1C,OCLa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKC,GACjD,GAAsB,qBAAXG,QAA4BA,OAAOC,YAAYC,OAAON,GAAjE,CACA,IAAIO,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKb,EAAII,OAAOC,cAAmBG,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGK,QAEThB,GAAKM,EAAKW,SAAWjB,GAH8CO,GAAK,IAK9E,MAAOW,GACPV,GAAK,EACLC,EAAKS,EACL,QACA,IACOX,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBP,EAAKC,IAAM,OAAAmB,EAAA,GAA2BpB,EAAKC,IGLjF,WACb,MAAM,IAAIoB,UAAU,6IHIgF,K,oBIJtGC,EAAOC,QAAU,CAAC,MAAQ,4BAA4B,SAAW,+BAA+B,KAAO,2BAA2B,UAAY,gCAAgC,UAAY,gCAAgC,QAAU,8BAA8B,SAAW,iC,oKCS9P,SAASC,IACpB,IAAMC,EAAWC,cAEjB,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KAEMC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUC,EAAoB,EAApBA,KAAMjB,EAAc,EAAdA,MACpC,OAAQiB,GACJ,IAAK,QACD,OAAOL,EAASZ,GACpB,IAAK,WACD,OAAOc,EAAYd,GACvB,QACI,SAaZ,OACI,gCACI,oBAAIkB,UAAWC,IAAOC,MAAtB,yBACA,sBAAMF,UAAWC,IAAOE,SAAxB,iEAIA,uBAAMC,SAhBO,SAAAC,GAEjB,GADAA,EAAEC,kBACGb,IAAUE,EAAU,OAAOY,IAAMC,MAAM,sCAE5ClB,EAASmB,IAAqB,CAAEhB,QAAOE,cACvCD,EAAS,IACTE,EAAY,KAUsBI,UAAWC,IAAOS,KAAMC,aAAa,MAAnE,UACI,cAAC,IAAD,CACIC,GAAG,IACHC,OAAK,EACLb,UAAWC,IAAOa,SAClBC,YAAad,IAAOe,WAJxB,eASA,wBAAOhB,UAAWC,IAAOgB,UAAzB,mBAEI,uBACIC,KAAK,QACLnB,KAAK,QACLjB,MAAOW,EACP0B,SAAUtB,EACVG,UAAWC,IAAOmB,eAI1B,wBAAOpB,UAAWC,IAAOgB,UAAzB,qBAEI,uBACIC,KAAK,WACLnB,KAAK,WACLjB,MAAOa,EACPwB,SAAUtB,EACVG,UAAWC,IAAOmB,eAK1B,wBAAQF,KAAK,SAASlB,UAAWC,IAAOoB,QAAxC","file":"static/js/login-page.f78789e8.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"RegisterView_title__2EcDb\",\"subtitle\":\"RegisterView_subtitle__1BGSg\",\"form\":\"RegisterView_form__2bDXb\",\"labelForm\":\"RegisterView_labelForm__3D3gT\",\"inputForm\":\"RegisterView_inputForm__3ELzV\",\"formBtn\":\"RegisterView_formBtn__2y_Jm\",\"closeBtn\":\"RegisterView_closeBtn__38Six\"};","import { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport * as authOperations from '../redux/auth/auth-operations';\r\nimport styles from './RegisterView.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n\r\nexport default function LoginView() {\r\n    const dispatch = useDispatch();\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const handleChange = ({ target: { name, value } }) => {\r\n        switch (name) {\r\n            case 'email':\r\n                return setEmail(value);\r\n            case 'password':\r\n                return setPassword(value);\r\n            default:\r\n                return;\r\n        }\r\n    };\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        if (!email || !password) return toast.error('Please enter your contact details!')\r\n\r\n        dispatch(authOperations.logIn({ email, password }));\r\n        setEmail('');\r\n        setPassword('');\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1 className={styles.title}> Phonebook </h1>\r\n            <span className={styles.subtitle}>\r\n                Sign in to use all the features of the application.\r\n            </span>\r\n\r\n            <form onSubmit={handleSubmit} className={styles.form} autoComplete=\"off\">\r\n                <NavLink\r\n                    to=\"/\"\r\n                    exact\r\n                    className={styles.closeBtn}\r\n                    activeStyle={styles.activeLink}\r\n                >\r\n                    X\r\n                </NavLink>\r\n\r\n                <label className={styles.labelForm}>\r\n                    E-mail\r\n                    <input\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        value={email}\r\n                        onChange={handleChange}\r\n                        className={styles.inputForm}\r\n                    />\r\n                </label>\r\n\r\n                <label className={styles.labelForm}>\r\n                    Password\r\n                    <input\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        value={password}\r\n                        onChange={handleChange}\r\n                        className={styles.inputForm}\r\n                    />\r\n                </label>\r\n\r\n\r\n                <button type=\"submit\" className={styles.formBtn}>Login</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}"],"sourceRoot":""}